{"version":3,"sources":["chartFunctions.tsx","functs.tsx","Constants.ts","useChart.tsx","ChartRS.tsx","ChartFS.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChartAnnotation","require","log2Tick","v","i","vs","val","Math","pow","Number","round","defaultTick","getChartData","symmetricData","asymmetricData","dynamicData","datasets","label","data","borderColor","backgroundColor","perf","r","sqrt","symmetricSpeedup","f","n","asymmetricSpeedup","r1","r2","dynamicSpeedup","F_STEP","useChart","nPower","rPower","type","useState","setSymmetricData","setAsymmetricData","setDynamicData","canvasRef","useRef","chartRef","useEffect","current","Chart","getContext","plugins","options","annotation","annotations","display","mode","value","scaleID","borderWidth","borderDash","animation","duration","scales","xAxes","id","scaleLabel","labelString","fontSize","ticks","min","max","callback","yAxes","position","generateChartConfig","destroy","d1","d2","d3","Array","from","keys","map","forEach","point1","x","y","point2","point3","push","rPowerValues","chart","update","ChartRS","props","className","ref","ChartFS","App","setN","setF","setR","changeHandler","useCallback","e","eventTarget","target","name","htmlFor","onChange","step","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7dc9f0.chunk.js","sourcesContent":["import { ChartOptions, ChartType, Point } from \"chart.js\"\r\nimport { MyChartType } from \"./shared\"\r\nconst ChartAnnotation = require('chartjs-plugin-annotation')\r\n\r\nfunction log2Tick(v: any, i: any, vs: any) {\r\n    const val = Math.pow(2, Number(v))\r\n    if (val === Math.round(val))\r\n        return Math.pow(2, Number(v))\r\n}\r\n\r\nfunction defaultTick(v: any, i: any, vs: any) {\r\n    return v\r\n}\r\n\r\nfunction getChartData(symmetricData: Point[], asymmetricData: Point[], dynamicData: Point[]) {\r\n    return {\r\n        datasets: [\r\n            {\r\n                label: 'Symmetric',\r\n                data: symmetricData,\r\n                borderColor: 'red',\r\n                backgroundColor: 'transparent'\r\n            },\r\n            {\r\n                label: 'Asymmetric',\r\n                data: asymmetricData,\r\n                borderColor: 'blue',\r\n                backgroundColor: 'transparent'\r\n            },\r\n            {\r\n                label: 'Dynamic',\r\n                data: dynamicData,\r\n                borderColor: 'green',\r\n                backgroundColor: 'transparent'\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport function generateChartConfig(type: MyChartType, f: number, rPower: number, nPower: number, symmetricData: Point[], asymmetricData: Point[], dynamicData: Point[]) {\r\n    return {\r\n        plugins: [ChartAnnotation],\r\n        type: 'line',\r\n        data: getChartData(symmetricData, asymmetricData, dynamicData),\r\n        options: {\r\n            annotation: {\r\n                annotations: [\r\n                    {\r\n                        type: 'line',\r\n                        display: true,\r\n                        mode: 'vertical',\r\n                        value: type === 'FS' ? f : rPower,\r\n                        scaleID: 'x-scale',\r\n                        borderColor: 'grey',\r\n                        borderWidth: 2,\r\n                        borderDash: [2, 2],\r\n                    }\r\n                ]\r\n            },\r\n            animation: {\r\n                duration: 0\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    id: 'x-scale',\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: type === 'FS' ? 'f' : 'r BCEs',\r\n                        fontSize: 18\r\n                    },\r\n                    type: 'linear',\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: type === 'FS' ? 10 : nPower,\r\n                        callback: type === 'FS' ? defaultTick : log2Tick,\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Speedup',\r\n                        fontSize: 18\r\n                    },\r\n                    type: 'linear',\r\n                    position: 'left'\r\n                }]\r\n            }\r\n        } as ChartOptions\r\n    }\r\n}\r\n","export function perf(r: number) {\r\n    return Math.sqrt(r)\r\n}\r\n\r\nexport function symmetricSpeedup(f: number, n: number, r: number) {\r\n    return (1 / (((1 - f) / perf(r)) + ((f * r) / (n * perf(r)))))\r\n}\r\n\r\nexport function asymmetricSpeedup(f: number, n: number, r1: number, r2: number = 1) {\r\n    return (1 / (((1 - f) / perf(r1)) + ((f) / (perf(r2) * (n - r1) + perf(r1)))))\r\n}\r\n\r\nexport function dynamicSpeedup(f: number, n: number, r: number) {\r\n    return (1 / (((1 - f) / perf(r)) + (f / n)))\r\n}\r\n","export const F_STEP = 0.01;","import { useState, useRef, useEffect } from 'react'\r\nimport { Point, Chart } from 'chart.js'\r\nimport { generateChartConfig } from './chartFunctions'\r\nimport { asymmetricSpeedup, dynamicSpeedup, symmetricSpeedup } from './functs'\r\nimport { F_STEP } from './Constants'\r\n\r\ntype MyChartType = 'FS' | 'RS'\r\n\r\nexport function useChart(f: number, nPower: number, rPower: number, type: MyChartType) {\r\n    const [symmetricData, setSymmetricData] = useState<any>()\r\n    const [asymmetricData, setAsymmetricData] = useState<any>()\r\n    const [dynamicData, setDynamicData] = useState<any>()\r\n\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null)\r\n    const chartRef = useRef<Chart | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (canvasRef && canvasRef.current) {\r\n            chartRef.current = new Chart(\r\n                canvasRef.current.getContext('2d') as CanvasRenderingContext2D,\r\n                generateChartConfig(type, f, nPower, rPower, symmetricData, asymmetricData, dynamicData))\r\n        }\r\n\r\n        return () => {\r\n            chartRef.current?.destroy()\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const d1: Point[] = []\r\n        const d2: Point[] = []\r\n        const d3: Point[] = []\r\n\r\n        if (type === 'FS') {\r\n            const f_values = Array.from(Array(1 + 1 / F_STEP).keys()).map((f, i) => i * F_STEP)\r\n            f_values.forEach((f) => {\r\n                const n = Math.pow(2, nPower)\r\n                const r = Math.pow(2, rPower)\r\n                const point1 = {\r\n                    x: f,\r\n                    y: symmetricSpeedup(f, n, r)\r\n                }\r\n                const point2 = {\r\n                    x: f,\r\n                    y: asymmetricSpeedup(f, n, r)\r\n                }\r\n                const point3 = {\r\n                    x: f,\r\n                    y: dynamicSpeedup(f, n, r)\r\n                }\r\n\r\n                d1.push(point1)\r\n                d2.push(point2)\r\n                d3.push(point3)\r\n            })\r\n\r\n        } else if (type === 'RS') {\r\n            const rPowerValues = Array.from(Array(nPower + 1).keys())\r\n            const n = Math.pow(2, nPower)\r\n\r\n            rPowerValues.forEach((rPower) => {\r\n                const r = Math.pow(2, rPower)\r\n                const point1 = {\r\n                    x: rPower,\r\n                    y: symmetricSpeedup(f, n, r)\r\n                }\r\n                const point2 = {\r\n                    x: rPower,\r\n                    y: asymmetricSpeedup(f, n, r)\r\n                }\r\n                const point3 = {\r\n                    x: rPower,\r\n                    y: dynamicSpeedup(f, n, r)\r\n                }\r\n\r\n                d1.push(point1)\r\n                d2.push(point2)\r\n                d3.push(point3)\r\n            })\r\n        }\r\n\r\n        setSymmetricData(d1)\r\n        setAsymmetricData(d2)\r\n        setDynamicData(d3)\r\n\r\n        // eslint-disable-next-line\r\n    }, [f, nPower, rPower])\r\n\r\n\r\n    useEffect(() => {\r\n        if (chartRef && chartRef.current) {\r\n            const chart = chartRef.current\r\n            if (chart.data.datasets && chart.options.scales && chart.options.scales.xAxes) {\r\n                chart.data.datasets[0].data = symmetricData;\r\n                chart.data.datasets[1].data = asymmetricData;\r\n                chart.data.datasets[2].data = dynamicData;\r\n\r\n                (chart.options.scales.xAxes[0].ticks as Chart.TickOptions).max = type === 'FS' ? 1 : nPower;\r\n                ((chart.options as any).annotation.annotations[0].value) = type === 'FS' ? f : rPower;\r\n\r\n                chart.update()\r\n            }\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [symmetricData, asymmetricData, dynamicData, f, rPower, nPower])\r\n\r\n\r\n    return {\r\n        canvasRef,\r\n    }\r\n}","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport Chart, { ChartOptions, Point } from 'chart.js'\r\nimport { asymmetricSpeedup, dynamicSpeedup, symmetricSpeedup } from './functs'\r\nimport { useChart } from './useChart';\r\nimport { ChartProps } from './shared';\r\n\r\nexport default function ChartRS(props: ChartProps) {\r\n    const { nPower, f, rPower } = props\r\n    const { canvasRef } = useChart(f, nPower, rPower, 'RS')\r\n\r\n    return (\r\n        <div className='canvas-container'>\r\n            <h2>Speedup , r</h2>\r\n            <canvas ref={canvasRef} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { ChartProps } from './shared';\r\nimport { useChart } from './useChart';\r\n\r\nexport default function ChartFS(props: ChartProps) {\r\n    const { f, nPower, rPower } = props\r\n    const { canvasRef } = useChart(f, nPower, rPower, 'FS')\r\n\r\n    return (\r\n        <div className='canvas-container'>\r\n            <h2>Speedup , f</h2>\r\n            <canvas ref={canvasRef} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from 'react';\nimport ChartRS from './ChartRS';\nimport ChartFS from './ChartFS';\nimport './App.css'\nimport { F_STEP } from './Constants';\n\nfunction App() {\n  const [nPower, setN] = useState<number>(5)\n  const [f, setF] = useState<number>(0.1)\n  const [rPower, setR] = useState<number>(1)\n\n  const changeHandler = useCallback((e: any) => {\n    const eventTarget: HTMLInputElement = e.target\n    const value = Number(eventTarget.value) as number\n    if (eventTarget.name === 'f') {\n      setF(value)\n    }\n    if (eventTarget.name === 'n') {\n      if (rPower > Number(eventTarget.value)) {\n        setR(value)\n        setN(value)\n      } else {\n        setN(value)\n      }\n    }\n    if (eventTarget.name === 'r') {\n      setR(Number(eventTarget.value) as number)\n    }\n\n  }, [rPower])\n\n  return (\n    <div className='container'>\n      <h1>\n        Amdahl’s Law in the Multicore Era\n      </h1>\n      <div className='flex-chart-container'>\n        <div className='flex-chart-item'>\n          <ChartRS rPower={rPower} nPower={nPower} f={f} />\n          <p className='chart-at'>At f = {f}</p>\n        </div>\n        <div className='flex-chart-item'>\n          <ChartFS f={f} nPower={nPower} rPower={rPower} />\n          <p className='chart-at'>At n = {Math.pow(2, nPower)}, r = {Math.pow(2, rPower)}</p>\n        </div>\n      </div>\n      <hr />\n      <div className='input-container'>\n        <div className='input-group'>\n          <label htmlFor='f'>f</label>\n          <input className='canvas-input' type='number' name='f' value={f} onChange={changeHandler} min={0} max={1} step={F_STEP} />\n          <p>f = {f}</p>\n        </div>\n        <div className='input-group'>\n          <label htmlFor='n'>Power of n</label>\n          <input className='canvas-input' type='number' name='n' value={nPower} onChange={changeHandler} min={0} max={10} />\n          <p>n = 2^{nPower} = {Math.pow(2, nPower)} BCEs</p>\n        </div>\n        <div className='input-group'>\n          <label htmlFor='r'>Power of r</label>\n          <input className='canvas-input' type='number' name='r' value={rPower} onChange={changeHandler} min={0} max={nPower} />\n          <p>r = 2^{rPower} = {Math.pow(2, rPower)} BCEs per Core</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}